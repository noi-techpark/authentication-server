version: "3.4"

services:
  keycloak01:
    image: authentication-server-keycloak
    build:
      context: ./
      dockerfile: infrastructure/docker/keycloak/Dockerfile
      target: prod
    environment:
      KC_LOG_LEVEL: info
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_HOSTNAME_STRICT: 'false'
      KC_HTTP_ENABLED: 'true'
      KC_PROXY: 'passthrough'
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      - postgres
    networks:
      - internal
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.auth1.entrypoints=http,https
      - traefik.http.routers.auth1.rule=Host(`auth.proxy.test`)
      - traefik.http.routers.auth1.tls=true
      - traefik.http.routers.auth1.service=auth
      - traefik.http.services.auth.loadbalancer.server.port=8080
      # - traefik.http.services.auth.loadbalancer.sticky.cookie=true

  # keycloak02:
  #   image: authentication-server-keycloak
  #   environment:
  #     KC_LOG_LEVEL: info
  #     KC_DB: postgres
  #     KC_DB_URL: jdbc:postgresql://postgres/keycloak
  #     KC_DB_USERNAME: keycloak
  #     KC_DB_PASSWORD: password
  #     KC_HOSTNAME_STRICT: 'false'
  #     KC_HTTP_ENABLED: 'true'
  #     KC_PROXY: 'passthrough'
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health"]
  #     interval: 20s
  #     timeout: 10s
  #     retries: 5
  #     start_period: 30s
  #   depends_on:
  #     - postgres
  #     - keycloak01
  #   networks:
  #     - internal
  #     - proxy
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.auth2.entrypoints=http,https
  #     - traefik.http.routers.auth2.rule=Host(`auth.proxy.test`)
  #     - traefik.http.routers.auth2.tls=true
  #     - traefik.http.routers.auth2.service=auth
  #     - traefik.http.services.auth.loadbalancer.server.port=8080
  #     # - traefik.http.services.auth.loadbalancer.sticky.cookie=true

  postgres:
    image: postgres:12
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    networks:
      - internal
    labels:
      - traefik.enable=false

  mailhog:
    image: mailhog/mailhog
    ports:
      - 8025:8025
    networks:
      - internal
    labels:
      - traefik.enable=false

networks:
  proxy:
    external: true
  internal:
    external: false
